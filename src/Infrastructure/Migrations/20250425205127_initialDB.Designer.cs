// <auto-generated />
using System;
using Auction.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Auction.Infrastructure.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    [Migration("20250425205127_initialDB")]
    partial class initialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Auction.Infrastructure.Models.AuctionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("VehicleVin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("VehicleVin");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("Auction.Infrastructure.Models.BidEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Bidder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PlacedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("Auction.Infrastructure.Models.VehicleEntity", b =>
                {
                    b.Property<string>("Vin")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("StartingBid")
                        .HasColumnType("numeric");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Vin");

                    b.ToTable("VehicleEntity");

                    b.HasDiscriminator<string>("VehicleType").HasValue("VehicleEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Auction.Infrastructure.Models.HatchbackEntity", b =>
                {
                    b.HasBaseType("Auction.Infrastructure.Models.VehicleEntity");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("integer");

                    b.ToTable("VehicleEntity", t =>
                        {
                            t.Property("NumberOfDoors")
                                .HasColumnName("HatchbackEntity_NumberOfDoors");
                        });

                    b.HasDiscriminator().HasValue("Hatchback");
                });

            modelBuilder.Entity("Auction.Infrastructure.Models.SUVEntity", b =>
                {
                    b.HasBaseType("Auction.Infrastructure.Models.VehicleEntity");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("SUV");
                });

            modelBuilder.Entity("Auction.Infrastructure.Models.SedanEntity", b =>
                {
                    b.HasBaseType("Auction.Infrastructure.Models.VehicleEntity");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("Sedan");
                });

            modelBuilder.Entity("Auction.Infrastructure.Models.TruckEntity", b =>
                {
                    b.HasBaseType("Auction.Infrastructure.Models.VehicleEntity");

                    b.Property<double>("LoadCapacity")
                        .HasColumnType("double precision");

                    b.HasDiscriminator().HasValue("Truck");
                });

            modelBuilder.Entity("Auction.Infrastructure.Models.AuctionEntity", b =>
                {
                    b.HasOne("Auction.Infrastructure.Models.VehicleEntity", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleVin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Auction.Infrastructure.Models.BidEntity", b =>
                {
                    b.HasOne("Auction.Infrastructure.Models.AuctionEntity", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("Auction.Infrastructure.Models.AuctionEntity", b =>
                {
                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
